//before you call this, make sure you include the setup partial like so
/ == render 'pie_chart_prep.html.slim'

- statuses = [:not_started, :on_track, :off_track, :significant_delay, :delivered ]
- js_data = ""
- i = 0
- statuses.each do |the_status|
  - js_data = js_data + "[\"#{the_status.to_s.humanize}\",     #{goals.where(status: i).count}],"
  - i = i + 1

/need to make sure every pie chart has a unique ID (when there are multiple ones on a page)
- @time_for_id = ((Time.now.to_f - Time.now.to_i)*1000).to_i
javascript:
  chartDrawingCallbacks.push (function() {
    //alert('calling! #{@time_for_id}');
    var data = google.visualization.arrayToDataTable([
      ['Goal', 'Status'],
      #{js_data.html_safe}

    ]);

    var options = {
      pieHole: 0.4, chartArea: {left:10,top:10,width:'90%',height:'90%'},legend: {position: 'right'}, colors: ['#6F777B','#006435','#FFBF47','#B10E1E','#005EA5']
    };

    var chart = new google.visualization.PieChart(document.getElementById('chart#{@time_for_id}'));
    chart.draw(data, options);

  });

/ uncomment when ready to show pie
h3.topaligned Goals by status
div id="chart#{@time_for_id}" style="width: 100%;"

ul.padded-row.pie_links.list-inline
  - i = 0
  - statuses.each do |status|
    li =link_to "#{status.to_s.humanize}: #{goals.where(status: i).count}", search_goals_path({status: i}.merge(goal_scope))
    - i = i + 1
